//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api PathX CreateUGAInstance

package pathx

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// CreateUGAInstanceRequest is request schema for CreateUGAInstance action
type CreateUGAInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID,如org-xxxx。请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"true"`

	// 加速实例名称
	Name *string `required:"true"`

	// 加速源IP，多个IP用逗号隔开(,)隔开;IPList和Domain二选一必填
	IPList *string `required:"true"`

	// 加速源域名;IPList和Domain二选一必填
	Domain *string `required:"true"`

	// 绑定的源站所在地，中文
	Location *string `required:"true"`

	// TCP端口号
	TCP []string `required:"true"`

	// UDP端口号
	UDP []string `required:"true"`

	// HTTP端口号
	HTTP []string `required:"true"`

	// HTTPS端口号
	HTTPS []string `required:"true"`
}

// CreateUGAInstanceResponse is response schema for CreateUGAInstance action
type CreateUGAInstanceResponse struct {
	response.CommonBase

	// 加速配置ID
	UGAId string

	// 加速域名 用户可把业务域名CName到此域名上。注意：未绑定线路情况时 加速域名解析不出IP。
	CName string
}

// NewCreateUGAInstanceRequest will create request of CreateUGAInstance action.
func (c *PathXClient) NewCreateUGAInstanceRequest() *CreateUGAInstanceRequest {
	req := &CreateUGAInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

// CreateUGAInstance - 创建全球加速配置项
func (c *PathXClient) CreateUGAInstance(req *CreateUGAInstanceRequest) (*CreateUGAInstanceResponse, error) {
	var err error
	var res CreateUGAInstanceResponse

	err = c.Client.InvokeAction("CreateUGAInstance", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
