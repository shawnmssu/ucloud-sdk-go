// Code is generated by ucloud-model, DO NOT EDIT IT.

package tests

import (
	"testing"
	"time"

	"github.com/ucloud/ucloud-sdk-go/ucloud/utest/driver"
	"github.com/ucloud/ucloud-sdk-go/ucloud/utest/functions"
	"github.com/ucloud/ucloud-sdk-go/ucloud/utest/utils"
	"github.com/ucloud/ucloud-sdk-go/ucloud/utest/validation"

	"github.com/ucloud/ucloud-sdk-go/ucloud"
)

func TestSet245(t *testing.T) {
	spec.ParallelTest(t, &driver.Scenario{
		PreCheck: func() {
			testAccPreCheck(t)
		},
		Id: 245,
		Vars: func(scenario *driver.Scenario) map[string]interface{} {
			return map[string]interface{}{

				"Region": "cn-bj2",
				"Zone":   "cn-bj2-02",
			}
		},
		Owners: []string{"lisa.wang@ucloud.cn"},
		Title:  "分布式Redis（计价）",
		Steps: []*driver.Step{
			testStep245CreateUMemSpace00,
			testStep245DescribeUMem01,
			testStep245DescribeUMemPrice02,
			testStep245DescribeOrderDetailInfo03,
			testStep245DescribeUMemUpgradePrice04,
			testStep245ResizeUMemSpace05,
			testStep245DescribeOrderDetailInfo06,
			testStep245GetResourceRenewPrice07,
			testStep245CreateRenew08,
			testStep245DescribeOrderDetailInfo09,
			testStep245DeleteUMemSpace10,
		},
	})
}

var testStep245CreateUMemSpace00 = &driver.Step{
	Invoker: func(step *driver.Step) (interface{}, error) {
		c, err := step.NewClient("")
		if err != nil {
			return nil, err
		}
		client := c.(*ucloud.Client)
		req := client.NewGenericRequest()
		_ = req.SetAction("CreateUMemSpace")
		req.SetPayload(map[string]interface{}{
			"Zone":       step.Scenario.GetVar("Zone"),
			"Type":       "double",
			"Size":       16,
			"Region":     step.Scenario.GetVar("Region"),
			"Quantity":   1,
			"Protocol":   "redis",
			"Name":       "Redis_fbs",
			"ChargeType": "Month",
		})

		resp, err := client.GenericInvoke(req)
		if err != nil {
			return resp, err
		}

		step.Scenario.SetVar("Space_Id", step.Must(utils.GetValue(resp, "SpaceId")))

		return resp, nil
	},
	Validators: func(step *driver.Step) []driver.TestValidator {
		return []driver.TestValidator{
			validation.Builtins.NewValidator("RetCode", 0, "str_eq"),
		}
	},
	StartupDelay:  time.Duration(0) * time.Second,
	MaxRetries:    0,
	RetryInterval: 0 * time.Second,
	Title:         "创建内存空间",
	FastFail:      false,
}

var testStep245DescribeUMem01 = &driver.Step{
	Invoker: func(step *driver.Step) (interface{}, error) {
		c, err := step.NewClient("")
		if err != nil {
			return nil, err
		}
		client := c.(*ucloud.Client)
		req := client.NewGenericRequest()
		_ = req.SetAction("DescribeUMem")
		req.SetPayload(map[string]interface{}{
			"ResourceId": step.Scenario.GetVar("Space_Id"),
			"Region":     step.Scenario.GetVar("Region"),
			"Protocol":   "redis",
		})

		resp, err := client.GenericInvoke(req)
		if err != nil {
			return resp, err
		}

		step.Scenario.SetVar("CreateTime", step.Must(utils.GetValue(resp, "DataSet.0.CreateTime")))

		return resp, nil
	},
	Validators: func(step *driver.Step) []driver.TestValidator {
		return []driver.TestValidator{
			validation.Builtins.NewValidator("RetCode", 0, "str_eq"),
		}
	},
	StartupDelay:  time.Duration(50) * time.Second,
	MaxRetries:    20,
	RetryInterval: 10 * time.Second,
	Title:         "获取UMem列表",
	FastFail:      false,
}

var testStep245DescribeUMemPrice02 = &driver.Step{
	Invoker: func(step *driver.Step) (interface{}, error) {
		c, err := step.NewClient("")
		if err != nil {
			return nil, err
		}
		client := c.(*ucloud.Client)
		req := client.NewGenericRequest()
		_ = req.SetAction("DescribeUMemPrice")
		req.SetPayload(map[string]interface{}{
			"Zone":       step.Scenario.GetVar("Zone"),
			"Type":       "double",
			"Size":       16,
			"Region":     step.Scenario.GetVar("Region"),
			"Quantity":   1,
			"ChargeType": "Month",
		})

		resp, err := client.GenericInvoke(req)
		if err != nil {
			return resp, err
		}

		step.Scenario.SetVar("GetPrice", step.Must(utils.GetValue(resp, "DataSet.0.Price")))

		return resp, nil
	},
	Validators: func(step *driver.Step) []driver.TestValidator {
		return []driver.TestValidator{
			validation.Builtins.NewValidator("RetCode", 0, "str_eq"),
		}
	},
	StartupDelay:  time.Duration(0) * time.Second,
	MaxRetries:    0,
	RetryInterval: 0 * time.Second,
	Title:         "获取价格",
	FastFail:      false,
}

var testStep245DescribeOrderDetailInfo03 = &driver.Step{
	Invoker: func(step *driver.Step) (interface{}, error) {
		c, err := step.NewClient("")
		if err != nil {
			return nil, err
		}
		client := c.(*ucloud.Client)
		req := client.NewGenericRequest()
		_ = req.SetAction("DescribeOrderDetailInfo")
		req.SetPayload(map[string]interface{}{
			"ResourceIds": []interface{}{
				step.Scenario.GetVar("Space_Id"),
			},
			"QueryAll": true,
			"OrderTypes": []interface{}{
				"OT_BUY",
			},
			"OrderStates": []interface{}{
				"OS_FINISHED",
			},
			"EndTime": step.Must(functions.GetTimestamp(10)),
			"ChargeTypes": []interface{}{
				"Month",
			},
			"BeginTime": step.Must(functions.Calculate("-", step.Must(functions.GetTimestamp(10)), 1200)),
		})

		resp, err := client.GenericInvoke(req)
		if err != nil {
			return resp, err
		}

		return resp, nil
	},
	Validators: func(step *driver.Step) []driver.TestValidator {
		return []driver.TestValidator{
			validation.Builtins.NewValidator("RetCode", 0, "str_eq"),
			validation.Builtins.NewValidator("OrderInfos.0.Amount", step.Must(functions.Calculate("+", step.Must(functions.Calculate("/", step.Scenario.GetVar("GetPrice"), 100)), 0.6)), "le"),
			validation.Builtins.NewValidator("OrderInfos.0.Amount", step.Must(functions.Calculate("-", step.Must(functions.Calculate("/", step.Scenario.GetVar("GetPrice"), 100)), 0.6)), "gt"),
		}
	},
	StartupDelay:  time.Duration(60) * time.Second,
	MaxRetries:    0,
	RetryInterval: 0 * time.Second,
	Title:         "获取订单信息",
	FastFail:      false,
}

var testStep245DescribeUMemUpgradePrice04 = &driver.Step{
	Invoker: func(step *driver.Step) (interface{}, error) {
		c, err := step.NewClient("")
		if err != nil {
			return nil, err
		}
		client := c.(*ucloud.Client)
		req := client.NewGenericRequest()
		_ = req.SetAction("DescribeUMemUpgradePrice")
		req.SetPayload(map[string]interface{}{
			"Zone":    step.Scenario.GetVar("Zone"),
			"Type":    "double",
			"SpaceId": step.Scenario.GetVar("Space_Id"),
			"Size":    18,
			"Region":  step.Scenario.GetVar("Region"),
		})

		resp, err := client.GenericInvoke(req)
		if err != nil {
			return resp, err
		}

		step.Scenario.SetVar("UpgradePrice", step.Must(utils.GetValue(resp, "Price")))

		return resp, nil
	},
	Validators: func(step *driver.Step) []driver.TestValidator {
		return []driver.TestValidator{
			validation.Builtins.NewValidator("RetCode", 0, "str_eq"),
		}
	},
	StartupDelay:  time.Duration(0) * time.Second,
	MaxRetries:    0,
	RetryInterval: 0 * time.Second,
	Title:         "获取升级价格",
	FastFail:      false,
}

var testStep245ResizeUMemSpace05 = &driver.Step{
	Invoker: func(step *driver.Step) (interface{}, error) {
		c, err := step.NewClient("")
		if err != nil {
			return nil, err
		}
		client := c.(*ucloud.Client)
		req := client.NewGenericRequest()
		_ = req.SetAction("ResizeUMemSpace")
		req.SetPayload(map[string]interface{}{
			"Zone":    step.Scenario.GetVar("Zone"),
			"SpaceId": step.Scenario.GetVar("Space_Id"),
			"Size":    18,
			"Region":  step.Scenario.GetVar("Region"),
		})

		resp, err := client.GenericInvoke(req)
		if err != nil {
			return resp, err
		}

		return resp, nil
	},
	Validators: func(step *driver.Step) []driver.TestValidator {
		return []driver.TestValidator{
			validation.Builtins.NewValidator("RetCode", 0, "str_eq"),
		}
	},
	StartupDelay:  time.Duration(5) * time.Second,
	MaxRetries:    0,
	RetryInterval: 0 * time.Second,
	Title:         "调整容量",
	FastFail:      false,
}

var testStep245DescribeOrderDetailInfo06 = &driver.Step{
	Invoker: func(step *driver.Step) (interface{}, error) {
		c, err := step.NewClient("")
		if err != nil {
			return nil, err
		}
		client := c.(*ucloud.Client)
		req := client.NewGenericRequest()
		_ = req.SetAction("DescribeOrderDetailInfo")
		req.SetPayload(map[string]interface{}{
			"ResourceIds": []interface{}{
				step.Scenario.GetVar("Space_Id"),
			},
			"QueryAll": true,
			"OrderTypes": []interface{}{
				"OT_UPGRADE",
			},
			"OrderStates": []interface{}{
				"OS_FINISHED",
			},
			"EndTime": step.Must(functions.GetTimestamp(10)),
			"ChargeTypes": []interface{}{
				"Month",
			},
			"BeginTime": step.Must(functions.Calculate("-", step.Must(functions.GetTimestamp(10)), 1200)),
		})

		resp, err := client.GenericInvoke(req)
		if err != nil {
			return resp, err
		}

		return resp, nil
	},
	Validators: func(step *driver.Step) []driver.TestValidator {
		return []driver.TestValidator{
			validation.Builtins.NewValidator("RetCode", 0, "str_eq"),
			validation.Builtins.NewValidator("OrderInfos.0.Amount", step.Must(functions.Calculate("+", step.Must(functions.Calculate("/", step.Scenario.GetVar("UpgradePrice"), 100)), 0.1)), "lt"),
			validation.Builtins.NewValidator("OrderInfos.0.Amount", step.Must(functions.Calculate("-", step.Must(functions.Calculate("/", step.Scenario.GetVar("UpgradePrice"), 100)), 0.1)), "gt"),
		}
	},
	StartupDelay:  time.Duration(60) * time.Second,
	MaxRetries:    0,
	RetryInterval: 0 * time.Second,
	Title:         "获取订单信息",
	FastFail:      false,
}

var testStep245GetResourceRenewPrice07 = &driver.Step{
	Invoker: func(step *driver.Step) (interface{}, error) {
		c, err := step.NewClient("")
		if err != nil {
			return nil, err
		}
		client := c.(*ucloud.Client)
		req := client.NewGenericRequest()
		_ = req.SetAction("GetResourceRenewPrice")
		req.SetPayload(map[string]interface{}{
			"ResourceIds": []interface{}{
				step.Scenario.GetVar("Space_Id"),
			},
			"Quantity":   1,
			"ChargeType": "Month",
		})

		resp, err := client.GenericInvoke(req)
		if err != nil {
			return resp, err
		}

		step.Scenario.SetVar("ReNewPrice", step.Must(utils.GetValue(resp, "RenewPriceSet.0.Price")))

		return resp, nil
	},
	Validators: func(step *driver.Step) []driver.TestValidator {
		return []driver.TestValidator{
			validation.Builtins.NewValidator("RetCode", 0, "str_eq"),
		}
	},
	StartupDelay:  time.Duration(2) * time.Second,
	MaxRetries:    0,
	RetryInterval: 0 * time.Second,
	Title:         "获取续费价格",
	FastFail:      false,
}

var testStep245CreateRenew08 = &driver.Step{
	Invoker: func(step *driver.Step) (interface{}, error) {
		c, err := step.NewClient("")
		if err != nil {
			return nil, err
		}
		client := c.(*ucloud.Client)
		req := client.NewGenericRequest()
		_ = req.SetAction("CreateRenew")
		req.SetPayload(map[string]interface{}{
			"ResourceId": step.Scenario.GetVar("Space_Id"),
			"Quantity":   1,
			"ChargeType": "Month",
		})

		resp, err := client.GenericInvoke(req)
		if err != nil {
			return resp, err
		}

		return resp, nil
	},
	Validators: func(step *driver.Step) []driver.TestValidator {
		return []driver.TestValidator{
			validation.Builtins.NewValidator("RetCode", 0, "str_eq"),
		}
	},
	StartupDelay:  time.Duration(2) * time.Second,
	MaxRetries:    0,
	RetryInterval: 0 * time.Second,
	Title:         "创建单个续费订单",
	FastFail:      false,
}

var testStep245DescribeOrderDetailInfo09 = &driver.Step{
	Invoker: func(step *driver.Step) (interface{}, error) {
		c, err := step.NewClient("")
		if err != nil {
			return nil, err
		}
		client := c.(*ucloud.Client)
		req := client.NewGenericRequest()
		_ = req.SetAction("DescribeOrderDetailInfo")
		req.SetPayload(map[string]interface{}{
			"ResourceIds": []interface{}{
				step.Scenario.GetVar("Space_Id"),
			},
			"QueryAll": true,
			"OrderTypes": []interface{}{
				"OT_RENEW",
			},
			"OrderStates": []interface{}{
				"OS_FINISHED",
			},
			"EndTime": step.Must(functions.GetTimestamp(10)),
			"ChargeTypes": []interface{}{
				"Month",
			},
			"BeginTime": step.Must(functions.Calculate("-", step.Must(functions.GetTimestamp(10)), 1200)),
		})

		resp, err := client.GenericInvoke(req)
		if err != nil {
			return resp, err
		}

		return resp, nil
	},
	Validators: func(step *driver.Step) []driver.TestValidator {
		return []driver.TestValidator{
			validation.Builtins.NewValidator("RetCode", 0, "str_eq"),
			validation.Builtins.NewValidator("OrderInfos.0.Amount", step.Scenario.GetVar("ReNewPrice"), "str_eq"),
		}
	},
	StartupDelay:  time.Duration(60) * time.Second,
	MaxRetries:    0,
	RetryInterval: 0 * time.Second,
	Title:         "获取订单信息",
	FastFail:      false,
}

var testStep245DeleteUMemSpace10 = &driver.Step{
	Invoker: func(step *driver.Step) (interface{}, error) {
		c, err := step.NewClient("")
		if err != nil {
			return nil, err
		}
		client := c.(*ucloud.Client)
		req := client.NewGenericRequest()
		_ = req.SetAction("DeleteUMemSpace")
		req.SetPayload(map[string]interface{}{
			"Zone":    step.Scenario.GetVar("Zone"),
			"SpaceId": step.Scenario.GetVar("Space_Id"),
			"Region":  step.Scenario.GetVar("Region"),
		})

		resp, err := client.GenericInvoke(req)
		if err != nil {
			return resp, err
		}

		return resp, nil
	},
	Validators: func(step *driver.Step) []driver.TestValidator {
		return []driver.TestValidator{}
	},
	StartupDelay:  time.Duration(2) * time.Second,
	MaxRetries:    0,
	RetryInterval: 0 * time.Second,
	Title:         "删除空间",
	FastFail:      false,
}
