// Code is generated by ucloud-model, DO NOT EDIT IT.

package ufile

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// BindBucketDomainRequest is request schema for BindBucketDomain action
type BindBucketDomainRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"true"`

	// 自定义域名对应的bucket名称
	BucketName *string `required:"true"`

	// 自定义域名
	Domain *string `required:"true"`
}

// BindBucketDomainResponse is response schema for BindBucketDomain action
type BindBucketDomainResponse struct {
	response.CommonBase

	// 自定义域名对应的Bucket的Id
	BucketId string

	// 自定义域名对应的bucket名称
	BucketName string
}

// NewBindBucketDomainRequest will create request of BindBucketDomain action.
func (c *UFileClient) NewBindBucketDomainRequest() *BindBucketDomainRequest {
	req := &BindBucketDomainRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// BindBucketDomain - 绑定自定义域名
func (c *UFileClient) BindBucketDomain(req *BindBucketDomainRequest) (*BindBucketDomainResponse, error) {
	var err error
	var res BindBucketDomainResponse

	reqCopier := *req

	err = c.Client.InvokeAction("BindBucketDomain", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
